buildscript {
	ext {
		queryDslVersion = "5.0.0"
		jwtVersion = "0.11.5"
		securityVersion = "2.7.5"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.dailystudy'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework:spring-messaging:6.0.9'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.security:spring-security-core:6.1.0'
	implementation "org.springframework.boot:spring-boot-starter-security:${securityVersion}"
	implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	implementation 'com.google.guava:guava:30.0-jre'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'


	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}


test {
	useJUnitPlatform()
}



/*
 * queryDSL 설정 추가
 */
//def querydslDir = "$buildDir/generated/querydsl"
def querydslDir = "src/main/generated"
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}
clean {
	delete file(querydslDir)
}